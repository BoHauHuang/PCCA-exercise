最大匹配 + 最小邊覆蓋 = V
最大獨立集 + 最小點覆蓋 = V
最大匹配 = 最小點覆蓋
最小路徑覆蓋數 = V - 最大匹配數

DP二進位算最大配對方式數 (top-down DP)
#define N = 10;
int adj[N][N];  // adjacency matrix。連線為1，否則為0。
int dp[1<<N];   // dp table
bool ok[1<<N];  // dp table是否已存值
int p[1<<N][2]; // 記錄匹配方式
 
bool f(int s){
    if (s == 0) return true;
    if (ok[s]) return dp[s];
 
    for (int i=0; i<N; ++i)
        for (int j=i+1; j<N; ++j)
            if (s & ((1<<i) | (1<<j))){
                int ss = s ^ (1<<i) ^ (1<<j);
                dp[s] = max(dp[s], f(ss) + adj[i][j]);
            }
 
    ok[s] = true;
    return dp[s];
}
 
int maximum_matching(){
    memset(dp, 0, sizeof(dp));
    memset(ok, false, sizeof(ok));
    return f((1<<N)-1);
}